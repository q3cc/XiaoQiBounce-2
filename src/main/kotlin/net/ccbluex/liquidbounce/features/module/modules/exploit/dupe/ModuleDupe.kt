/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2015 - 2025 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.dupe

import net.ccbluex.liquidbounce.config.types.nesting.Choice
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.ClientModule
import net.ccbluex.liquidbounce.features.module.modules.exploit.dupe.exploits.DupePaper1204
import net.ccbluex.liquidbounce.utils.client.chat
import net.ccbluex.liquidbounce.utils.client.markAsError
import net.minecraft.item.Item

object ModuleDupe : ClientModule("Dupe", Category.EXPLOIT, disableOnQuit = true, disableActivation = true) {

    init {
        // Dupe are very rare occurrences,
        // and therefore we don't want them to be included in our auto config.
        doNotIncludeAlways()
    }

    override fun enable() {
        if (mc.isInSingleplayer) {
            chat(markAsError(message("singleplayer")))
            return
        }

        if (interaction.gameMode.isCreative) {
            chat(markAsError(message("creative")))
            return
        }

        exploitChoices.activeChoice.enable()
        super.enable()
    }

    val exploitChoices = choices<Choice>("Exploit", DupePaper1204, arrayOf(
        DupePaper1204
    ))

    internal fun requiresItem(item: Item) = message("requiresItem", item.name)

}
